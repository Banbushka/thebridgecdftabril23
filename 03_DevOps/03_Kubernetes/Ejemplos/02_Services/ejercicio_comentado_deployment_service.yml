apiVersion: v1 
kind: Service 
metadata:
  name: appnueva
spec:
  # Expone el servicio en un puerto estático en cada nodo
  # para que podamos acceder al servicio desde fuera del clúster
  type: NodePort

  # Cuando el nodo recibe una solicitud en el puerto estático (30163)
  # "selecciona los  pods con la etiqueta 'app' y 'echo-hostname'"
  # y reenviar la solicitud a uno de ellos
  selector:
    app: nueva 

  ports:
    # Tres tipos de puertos para un servicio
    # nodePort: un puerto estático asignado a cada nodo
    # port: puerto expuesto internamente en el clúster
    # targetPort: el puerto del contenedor al que enviar solicitudes
    - nodePort: 32100
      port: 5030
      targetPort: 5000
---
apiVersion: apps/v1
kind: Deployment

metadata:
  name: appnueva
spec:
  # El estado deseado de una réplica se define como
  
  # 1. ¿Cuántas copias quiero?
  replicas: 10

  # 2. ¿Cómo quiero actualizar?
  strategy: Recreate

  # 3. ¿Qué pods son controlados por este deployment?
  selector:
    # ¡Esto debe coincidir exactamente con el label del pod!
    matchLabels:
      app: nueva
  
  # template indica la definición del pod, como si fuera un kind: Pod
  # spec está los containers implicados en el pod.
  template:
    metadata:
      # La etiqueta es utilizada por el selector del Deployment.
      labels:
        app: nueva
    spec:
      containers:
        - name: appmain
          image: usuario/appmain:1.0
          ports:
            - containerPort: 5000
        - name: redis
          image: redis
          ports:
            - containerPort: 6379